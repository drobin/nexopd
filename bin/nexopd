#!/usr/bin/env ruby

require 'eventmachine'
require 'getoptlong'
require 'nexop'
require 'nexop/userauth'
require 'nexopd'
require 'em/sshd'

def usage
  puts <<-EOF
Usage: #{File.basename($0)} -f PATH [options]

  -f, --config-file PATH      Read configuration from PATH
  -h, --help                  Show this message
  EOF
  exit(0)
end

opts = GetoptLong.new(
  [ '--config-file', '-f', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--help', '-h', GetoptLong::NO_ARGUMENT ]
)

opts.each do |opt, arg|
  case opt
  when '--config-file' then $config_file = arg.clone
  when '--help'        then usage
  end
end

usage if $config_file.nil? || !File.exists?($config_file)
$server_settings, $session_settings = Nexopd::Settings.from_file($config_file)

EventMachine.run do
  Signal.trap("INT")  { EventMachine.stop }
  Signal.trap("TERM") { EventMachine.stop }

  hostkey = ::Nexop::Hostkey.from_file($server_settings.hostkey)
  EventMachine.start_server("0.0.0.0", $server_settings.port, EventMachine::Sshd, hostkey) do |connection|
    session = connection.session
    session.service.add_service(Nexop::Userauth::Service.new)
  end
end
